import React, { useState, useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import {
  BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid
} from 'recharts';
import MessageCharts from './MessageCharts';

function AnalysisMenu() {
  const location = useLocation();
  const folder = location.state?.folder || '';

  const [selected, setSelected] = useState('–ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å');
  const [chartType, setChartType] = useState('hour');
  const [chartData, setChartData] = useState([]);
  const [folderResult, setFolderResult] = useState('');

  const fetchChartData = async (type) => {
    const endpoint =
      type === 'hour' ? 'activity-per-hour' : 'activity-per-day';

    try {
      const response = await fetch(
        `http://localhost:5222/api/messageanalysis/${endpoint}?folder=${encodeURIComponent(folder)}`
      );
      if (!response.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö');
      const data = await response.json();

      const formatted = Object.entries(data)
        .map(([label, count]) => ({ label, count }))
        .sort((a, b) => {
          if (type === 'hour') return parseInt(a.label) - parseInt(b.label);

          const days = ['–ø–æ–Ω–µ–¥—ñ–ª–æ–∫', '–≤—ñ–≤—Ç–æ—Ä–æ–∫', '—Å–µ—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä', '–ø º—è—Ç–Ω–∏—Ü—è', '—Å—É–±–æ—Ç–∞', '–Ω–µ–¥—ñ–ª—è'];
          return days.indexOf(a.label.toLowerCase()) - days.indexOf(b.label.toLowerCase());
        });

      setChartData(formatted);
      setFolderResult(type === 'hour' ? '–ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∑–∞ –≥–æ–¥–∏–Ω–∞–º–∏' : '–ì—Ä–∞—Ñ—ñ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∑–∞ –¥–Ω—è–º–∏ —Ç–∏–∂–Ω—è');
    } catch (err) {
      setFolderResult('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö');
      setChartData([]);
    }
  };

  useEffect(() => {
    if (selected === '–ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å') {
      fetchChartData(chartType);
    }
  }, [selected, chartType]);

  const getButtonStyle = (name) => ({
    padding: '12px 28px',
    fontSize: 16,
    borderRadius: 40,
    border: selected === name ? '1px solid #1976d2' : '1px solid #bbb',
    background: selected === name ? '#e3f0fc' : '#f7f7f7',
    color: selected === name ? '#1976d2' : '#222',
    boxShadow: selected === name ? '0 2px 8px #1976d222' : 'none',
    cursor: 'pointer',
    transition: 'all 0.15s',
    whiteSpace: 'nowrap'
  });

  const getChartTypeButtonStyle = (type) => ({
    padding: '8px 18px',
    fontSize: 14,
    borderRadius: 24,
    border: chartType === type ? '1px solid #555' : '1px solid #ccc',
    background: chartType === type ? '#dceefc' : '#f0f0f0',
    color: chartType === type ? '#1976d2' : '#444',
    cursor: 'pointer'
  });

  return (
    <div
      style={{
        minHeight: '100vh',
        background: '#fff',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        padding: '40px 20px'
      }}
    >
      <h2 style={{ marginBottom: 32 }}>–ú–µ–Ω—é –∞–Ω–∞–ª—ñ–∑—É</h2>

      <div
        style={{
          display: 'flex',
          gap: 16,
          marginBottom: 32,
          flexWrap: 'wrap'
        }}
      >
        <button
          style={getButtonStyle('–ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å')}
          onClick={() => setSelected('–ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å')}
        >
          üëÅÔ∏è‚Äçüó®Ô∏è –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø
        </button>
        <button
          style={getButtonStyle('–ê–Ω–∞–ª—ñ–∑ —Å–ª—ñ–≤')}
          onClick={() => setSelected('–ê–Ω–∞–ª—ñ–∑ —Å–ª—ñ–≤')}
        >
          üî§ –°–õ–û–í–ê
        </button>
        <button
          style={getButtonStyle('–ê–Ω–∞–ª—ñ–∑ —Ä–µ–∞–∫—Ü—ñ–π')}
          onClick={() => setSelected('–ê–Ω–∞–ª—ñ–∑ —Ä–µ–∞–∫—Ü—ñ–π')}
        >
          üòä –†–ï–ê–ö–¶–Ü–á
        </button>
      </div>

      {selected === '–ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å' && (
        <>
          <div style={{ display: 'flex', gap: 12, marginBottom: 20 }}>
            <button onClick={() => setChartType('hour')} style={getChartTypeButtonStyle('hour')}>
              üìä –ó–∞ –≥–æ–¥–∏–Ω–∞–º–∏
            </button>
            <button onClick={() => setChartType('day')} style={getChartTypeButtonStyle('day')}>
              üìÖ –ó–∞ –¥–Ω—è–º–∏ —Ç–∏–∂–Ω—è
            </button>
          </div>

          <div style={{ fontSize: 20, color: '#1976d2', marginBottom: 20 }}>
            {folderResult}
          </div>

          {chartData.length > 0 && (
            <div style={{ width: '100%', maxWidth: 500 }}>
              <ResponsiveContainer width="100%" height={250}>
                <BarChart data={chartData}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="label" label={{ value: chartType === 'hour' ? '–ì–æ–¥–∏–Ω–∞' : '–î–µ–Ω—å', position: 'insideBottom', offset: -5 }} />
                  <YAxis allowDecimals={false} label={{ value: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', angle: -90, position: 'insideLeft' }} />
                  <Tooltip />
                  <Bar dataKey="count" fill="#1976d2" />
                </BarChart>
              </ResponsiveContainer>
            </div>
          )}

          <MessageCharts folder={folder} />
        </>
      )}

      {selected !== '–ê–Ω–∞–ª—ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å' && (
        <p style={{ fontSize: 18, marginTop: 20, color: '#888' }}>
          –¶—è –≤–∫–ª–∞–¥–∫–∞ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ üõ†
        </p>
      )}
    </div>
  );
}

export default AnalysisMenu;
